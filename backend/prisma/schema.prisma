// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  members
}

model Shops {
  shopId     String             @id @default(cuid())
  clerkOrgId String             @unique
  name       String
  message    String?
  shopNum    String?
  location   String?
  imgUrl     String?
  code       String?            @unique
  users      ShopSubscription[]
}

model Users {
  userId         String             @id @default(cuid())
  clerkId        String             @unique
  username       String?
  email          String             @unique
  avatarUrl      String?
  bdate          String?
  shops          ShopSubscription[]
  orgMemberships OrgMembers[]
}

model Customers {
  customerId String   @id @default(cuid())
  name       String
  phone      String   @unique
  createdAt  DateTime @default(now())
  shops          ShopSubscription[]
}

// Many-to-many relationship between Users and Shops
model ShopSubscription {
  id          String      @id @default(cuid())
  userId      String?
  customerId  String?
  shopId      String
  createdAt   DateTime    @default(now())

  user        Users?      @relation(fields: [userId], references: [clerkId])
  customer    Customers?  @relation(fields: [customerId], references: [customerId])
  shop        Shops       @relation(fields: [shopId], references: [clerkOrgId])

  @@unique([userId, shopId])
  @@unique([customerId, shopId])
}

// Organization members with roles
model OrgMembers {
  id       String   @id @default(cuid())
  clerkId  String
  orgId    String
  role     Role
  joinedAt DateTime @default(now())

  user Users @relation(fields: [clerkId], references: [clerkId])

  @@unique([clerkId, orgId])
}
